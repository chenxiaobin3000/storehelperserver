<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
            1，conditional：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample； -->
    <context id="mysql" defaultModelType="flat" targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号 -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 自定义插件 -->
        <plugin type="com.cxb.mybatis.plugins.MybatisPlugin"></plugin>

        <!-- 关闭注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库配置 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/storehelperdb?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8"
                        userId="root"
                        password="123456"/>

        <!-- java模型创建器 -->
        <javaModelGenerator targetPackage="com.cxb.storehelperserver.model" targetProject="src/main/java">
            <!-- 设置一个根对象，如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；
                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了 -->
            <!--<property name="rootClass" value="com.cxb.storehelperserver.model.BaseModel"/>-->

            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成XML的文件生成器，如果javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置targetPackage/targetProject -->
        <sqlMapGenerator targetPackage="com.cxb.storehelperserver.mapper" targetProject="src/main/resources"/>

        <!-- 生成Mapper接口，type：XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
                                 ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建，不会生成对应的XML -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.cxb.storehelperserver.mapper"
                             targetProject="src/main/java"/>

        <table tableName="t\_%"/>
    </context>
</generatorConfiguration>
